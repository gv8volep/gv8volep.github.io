{"meta":{"title":"7Q的博客","subtitle":"","description":"OwO","author":"7Q","url":"https://gv8volep.github.io","root":"/"},"pages":[{"title":"categories","date":"2023-07-28T03:50:05.000Z","updated":"2023-07-28T03:50:24.960Z","comments":true,"path":"categories/index.html","permalink":"https://gv8volep.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2023-07-28T04:24:56.760Z","updated":"2023-07-28T04:24:56.760Z","comments":true,"path":"css/bg.css","permalink":"https://gv8volep.github.io/css/bg.css","excerpt":"","text":"/* 页脚与头图透明 */ #footer { background: transparent !important; } #page-header { background: transparent !important; } /* 白天模式遮罩透明 */ #footer::before { background: transparent !important; } #page-header::before { background: transparent !important; } /* 夜间模式遮罩透明 */ [data-theme=\"dark\"] #footer::before { background: transparent !important; } [data-theme=\"dark\"] #page-header::before { background: transparent !important; }"},{"title":"","date":"2023-07-28T05:00:18.005Z","updated":"2023-07-28T05:00:18.005Z","comments":true,"path":"css/costom.css","permalink":"https://gv8volep.github.io/css/costom.css","excerpt":"","text":"@font-face { /* 为载入的字体取名字(随意) */ font-family: 'myfont1'; /* 字体文件地址(相对或者绝对路径都可以) */ src: url(/font/1639364903795024.ttf); /* 定义加粗样式(加粗多少) */ font-weight: normal; /* 定义字体样式(斜体/非斜体) */ font-style: normal; /* 定义显示样式 */ font-display: block; }"},{"title":"tags","date":"2023-07-28T05:03:13.000Z","updated":"2023-07-28T05:03:30.684Z","comments":true,"path":"tags/index.html","permalink":"https://gv8volep.github.io/tags/index.html","excerpt":"","text":""},{"title":"图库","date":"2023-07-28T02:07:39.000Z","updated":"2023-07-28T02:45:19.068Z","comments":true,"path":"gallery/index.html","permalink":"https://gv8volep.github.io/gallery/index.html","excerpt":"","text":"专辑/单曲封面 . 插画 精美的插画"},{"title":"友情链接","date":"2023-07-27T07:13:28.000Z","updated":"2023-07-27T08:30:31.640Z","comments":true,"path":"link/index.html","permalink":"https://gv8volep.github.io/link/index.html","excerpt":"","text":""},{"title":"专辑/单曲封面","date":"2023-07-28T02:07:39.000Z","updated":"2023-07-28T02:39:41.621Z","comments":true,"path":"gallery/cd/index.html","permalink":"https://gv8volep.github.io/gallery/cd/index.html","excerpt":"","text":"[{\"url\":\"https://p3.music.126.net/Ev6ifZrRefdFF0kZIpq5Lw==/109951166266518901.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/nRuQt_bbbiQ70CxwXUHXOQ==/109951163597044887.jpg\",\"alt\":\"\"},{\"url\":\"https://p4.music.126.net/jWFFWk-XoYFTVh09nWjBGg==/109951165005758203.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/bw7Sxt-W5lq0Jeq9B9eaXA==/109951163846794308.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/tzykI3ZXAL8b0hyVk0uq8Q==/42880953495280.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/vlAsuR_7xkGYlthG92Z81A==/109951164144451252.jpg\",\"alt\":\"\"},{\"url\":\"https://p4.music.126.net/W1kczDCB4-r-uNAznD1ljg==/108851651165850.jpg\",\"alt\":\"\"},{\"url\":\"https://p4.music.126.net/aEehIWg8Qk5DXLGf0XZHqw==/109951166554891221.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/z253qn2_rIiK0NvaD5_btA==/109951162817129061.jpg\",\"alt\":\"\"}] 加载更多"},{"title":"插画","date":"2023-07-28T02:07:39.000Z","updated":"2023-07-28T02:44:50.330Z","comments":true,"path":"gallery/img/index.html","permalink":"https://gv8volep.github.io/gallery/img/index.html","excerpt":"","text":"[{\"url\":\"https://pic.imgdb.cn/item/64c325e71ddac507cc9b3175.png\",\"alt\":\"\"},{\"url\":\"https://pic.imgdb.cn/item/64c32b3b1ddac507cca45f2a.png\",\"alt\":\"\"},{\"url\":\"https://pic.imgdb.cn/item/64c32b3b1ddac507cca46165.webp\",\"alt\":\"\"},{\"url\":\"https://pic.imgdb.cn/item/64c32b201ddac507cca42e94.png\",\"alt\":\"\"}] 加载更多"}],"posts":[{"title":"【萌新】用Python制作的单词背诵程序","slug":"[萌新]用Python制作的单词背诵程序","date":"2023-08-07T10:59:47.116Z","updated":"2023-08-24T01:58:17.963Z","comments":true,"path":"2023/08/07/[萌新]用Python制作的单词背诵程序/","link":"","permalink":"https://gv8volep.github.io/2023/08/07/[%E8%90%8C%E6%96%B0]%E7%94%A8Python%E5%88%B6%E4%BD%9C%E7%9A%84%E5%8D%95%E8%AF%8D%E8%83%8C%E8%AF%B5%E7%A8%8B%E5%BA%8F/","excerpt":"","text":"最近心血来潮制作了一个关于单词背诵的程序，本文将从构思到代码逐步解读思路。（纯萌新） 程序结构程序可以分为三个结构：主UI界面，背单词界面，读取词库、收藏夹等功能程序。 主UI界面本程序两个UI都使用Python的tkinter库。 主UI有以下互动选项： 开始 收藏夹 历史、进度、选择词库(饼) 背单词界面背单词界面实现了以下功能 已经记住（刷新） 展示中文 加入收藏夹 功能程序 读取词库 文件交互 代码解读读取词库首先，本程序所支持的词库格式为.xlsx文件，要与Excel文件进行交互，便用到了，Python的 openpyxl 库。 要先在cmd或powershell中进行下载。 1pip install openpyxl 按照格式整理词库 如图所示，即A列为外语单词，B列为汉语语义；且由于选择词库还在饼，词库文件名必须为词库.xlsx，工作表名必须为 Sheet1。 在网络中获取一个外语词库格式可能非常混乱，而通常词库单词多，人工排版极为麻烦，我在这里用到了office Excel的分列功能。 分列功能有分割符号和固定宽度两个方式，一般推荐分割符号，毕竟每个单词长短不同，所选的符号可以是原有的分号或者方括号、大括号、斜杠等原有的、具有代表性的符号。 Python文件读取、处理词库12345678910if __name__ ==&#x27;__main__&#x27;: import openpyxl workbook = openpyxl.load_workbook(&quot;词库.xlsx&quot;) #导入excel worksheet = workbook[&#x27;Sheet1&#x27;] #选择工作表 xl_A = [] #存储A列数据的列表 xl_B = [] #存储B列数据的列表 for a in worksheet.iter_cols(min_row=1, max_row=worksheet.max_row, min_col=1, max_col=1): #把A列数据存到列表中，与row相关为行，col为列 xl_A.extend([cell.value for cell in a]) for b in worksheet.iter_cols(min_row=1, max_row=worksheet.max_row, min_col=2, max_col=2): #把B列数据存到列表中 xl_B.extend([cell.value for cell in b]) 此段代码用openpyxl库，实现了确定文档路径、工作表，并遍历行列，将单词存储于xl_A列表中，将汉语意思存储于xl_B中。 本来在构思中打算用字典存储数据，但考虑到相同单词对应的汉语下标相同，所以舍弃这一想法。 使用Tkinter制作程序UI本程序采用最简单的pyUI框架（","categories":[{"name":"程序","slug":"程序","permalink":"https://gv8volep.github.io/categories/%E7%A8%8B%E5%BA%8F/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://gv8volep.github.io/tags/Python/"}]},{"title":"RE:从零开始的Python学习笔记","slug":"RE从零开始的Python学习笔记","date":"2023-07-28T07:40:26.622Z","updated":"2023-08-07T11:41:31.555Z","comments":true,"path":"2023/07/28/RE从零开始的Python学习笔记/","link":"","permalink":"https://gv8volep.github.io/2023/07/28/RE%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"这里是一个萌新的 Python 学习笔记，在这里，我将从头开始梳理 Python 语法结构与代码。 Python语法特点面向对象不同于C语言，Python编程具有强烈的 面向对象 特性，于class中体现其性质。 缩进Python是一门非常注重 缩进 的语言，任何语句必须严格按照逻辑缩进，否则出现错误提示。 代码规范学习任何计算机语言，一定要养成 注释 的好习惯，不单单为了他人的阅读性，更利于自己检查代码。 12345# 在python中，使用井号进行单行注释&#x27;&#x27;&#x27;使用三个连续的单引号或双引号进行多行注释&#x27;&#x27;&#x27; 环境相比于Microsoft的Visual Studio Code，更推荐Pycharm进行Python项目的开发。 初识Python: 简单的Python语句输入&amp;输出&amp;变量Python中，输入与输出的代码分别是input与print 12print(&quot;输出内容&quot;)a = input(&quot;对用户的提示&quot;) #将用户输入内容，存放于变量a中。 在上面代码的书写中，我们用到了变量a来存放输入内容。 在python中，变量的使用是不需要提前声明的，所以可以直接使用。 提示 命名变量时一定要使变量名称有鲜明特点，方便阅读；且Python支持中文变量名(不建议使用) 另外，要注意变量的名字不可与Python中的保留字重名。具体请见下图： 数据类型数字型整数整数依据进制不同，主要分为十进制、二进制、十六进制、八进制等。 我们最熟悉的莫过于十进制整数。Python中表示十进制的数，只需要输入其所有位数即可。 注意 不可以0开头表示十进制整数。 八进制整数每位由0~7组成，逢8进1。 Python中八进制必须以0o或0O开头。 二进制与十六进制同理，不过在表示十六进制数的时候，前面必须加上0x或0X。 Python中用”int”将数据转换为整数型，且符合“向下取整”原则。如下所示。 12&gt;&gt;&gt;int(3.99) 3 浮点数浮点数由整数部分与小数部分组成，主要用于表示过小的数字。 Python中用”float”将数据转换为浮点型。 12&gt;&gt;&gt;float(2) 2.0 字符串顾名思义，字符串是字符的整体。 在python中，可以使用’’、””、’’’’’’表示字符串。其中、’’’’’’可以分多行表示。 12345a=&#x27;你好世界&#x27;b=&quot;你好世界&quot;c=&#x27;&#x27;&#x27;你好，世界！&#x27;&#x27;&#x27;print(&quot;%s\\n%s\\n%s&quot; % (a,b,c)) 输出: 123你好世界你好世界你好，世界！ 我们使用str将数据转换为字符串。 12&gt;&gt;&gt;str(123456) &quot;123456&quot; 布尔型布尔型是表示真或假的数据类型。分别用True和False来表示真与假。 我们用int将布尔值转换为整数型。 1234&gt;&gt;&gt;int(True) 1&gt;&gt;&gt;int(False) 0 开摆了，鸽~ 以上写着玩。","categories":[{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"Python","slug":"Python","permalink":"https://gv8volep.github.io/tags/Python/"}]},{"title":"Hello World - Hexo搭建个人博客网站教程","slug":"hello-world","date":"2023-07-26T23:42:29.273Z","updated":"2023-08-07T11:03:18.955Z","comments":true,"path":"2023/07/27/hello-world/","link":"","permalink":"https://gv8volep.github.io/2023/07/27/hello-world/","excerpt":"","text":"欢迎来到7Q的博客！本站基于Hexo框架搭建，访问 https://hexo.io/ 搭建同款网站^^。以下简单写一下搭建过程。 安装Hexo下载Node.js点击这里 ，根据自己系统下载即可。 下载Git点我 即可下载，下载时无脑下一步。 顺便下一个能编辑.yml文件的编辑器(如notepad++,vscode) 下载Hexo进入Git Bash，依次输入: 12345npm install hexo-cli -ghexo init blogcd blognpm installhexo server 将网站部署至Github配置Git首先注册一个Github账号。 然后在Git bash中输入： 12git config --global user.name &quot;你的Github用户名&quot;git config --global user.email &quot;你的Github邮箱&quot; 生成&amp;查看SSH密钥输入以下内容：(过程中需要点击三次回车键) 1ssh-keygen -t rsa -C &quot;你的Github邮箱&quot; 1cat ~/.ssh/id_rsa.pub #查看密钥 将网站上传至Github上传SSH进入Github，点击右上角你的头像，找到 Settings 。 在左侧找到 SSH and GPG keys 。 如下图所示填写key。 最后在git bash窗口中输入： 1ssh -T git@github.com 若出现”successfully”等字样，代表创建成功。 创建一个库再进入Github首页，点击 New Repository 或者 new 。 按照上图创建一个库。 上传与部署在博客根目录的 _config.yml 文件中搜索 deploy 。 并输入： 1234deploy: type: git repo: git@github.com:你的用户名/你的用户名.github.io.git branch: master 最后在根目录git bash窗口中输入： 123hexo cleanhexo ghexo d 验收成果进入 你的用户名.github.io 若进入网站则成功！ 该过程可能需要几分钟，不久后刷新即可。 附录 - Hexo常用命令12345hexo s #启动网站hexo g #生成网页hexo d #部署网站hexo clean #清除缓存hexo new page #新建网页 更多内容请参考Hexo官网文档。","categories":[{"name":"教程","slug":"教程","permalink":"https://gv8volep.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"教程","slug":"教程","permalink":"https://gv8volep.github.io/tags/%E6%95%99%E7%A8%8B/"},{"name":"Hexo","slug":"Hexo","permalink":"https://gv8volep.github.io/tags/Hexo/"}]}],"categories":[{"name":"程序","slug":"程序","permalink":"https://gv8volep.github.io/categories/%E7%A8%8B%E5%BA%8F/"},{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/categories/%E7%AC%94%E8%AE%B0/"},{"name":"教程","slug":"教程","permalink":"https://gv8volep.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://gv8volep.github.io/tags/Python/"},{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"教程","slug":"教程","permalink":"https://gv8volep.github.io/tags/%E6%95%99%E7%A8%8B/"},{"name":"Hexo","slug":"Hexo","permalink":"https://gv8volep.github.io/tags/Hexo/"}]}