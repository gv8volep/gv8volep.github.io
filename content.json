{"meta":{"title":"7Q的博客","subtitle":"","description":"OwO","author":"7Q","url":"https://gv8volep.github.io","root":"/"},"pages":[{"title":"categories","date":"2023-07-28T03:50:05.000Z","updated":"2023-07-28T03:50:24.960Z","comments":true,"path":"categories/index.html","permalink":"https://gv8volep.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2023-07-28T04:24:56.760Z","updated":"2023-07-28T04:24:56.760Z","comments":true,"path":"css/bg.css","permalink":"https://gv8volep.github.io/css/bg.css","excerpt":"","text":"/* 页脚与头图透明 */ #footer { background: transparent !important; } #page-header { background: transparent !important; } /* 白天模式遮罩透明 */ #footer::before { background: transparent !important; } #page-header::before { background: transparent !important; } /* 夜间模式遮罩透明 */ [data-theme=\"dark\"] #footer::before { background: transparent !important; } [data-theme=\"dark\"] #page-header::before { background: transparent !important; }"},{"title":"","date":"2023-08-30T01:05:39.063Z","updated":"2023-08-30T01:05:39.063Z","comments":true,"path":"css/custom.css","permalink":"https://gv8volep.github.io/css/custom.css","excerpt":"","text":"@font-face { /* 为载入的字体取名字(随意) */ font-family: 'myfont1'; /* 字体文件地址(相对或者绝对路径都可以) */ src: url(/font/1639364903795024.ttf); /* 定义加粗样式(加粗多少) */ font-weight: normal; /* 定义字体样式(斜体/非斜体) */ font-style: normal; /* 定义显示样式 */ font-display: block; } .loading-img { background: url(https://cdn.staticaly.com/gh/gv8volep/7QIHS@main/img/bg2.png) no-repeat center center; background-size: cover; } @media screen and (max-width: 767px) { .copyright { display: none !important; } .framework-info { display: none !important; } } /*10s为加载动画的时间，1为加载动画的次数，ease-in-out为动画效果*/ #page-header, #web_bg { -webkit-animation: imgblur 1s 1 ease-in-out; animation: imgblur 1s 1 ease-in-out; } @keyframes imgblur { 0% { filter: blur(5px); } 100% { filter: blur(0px); } } /*适配使用-webkit内核的浏览器 */ @-webkit-keyframes imgblur { 0% { -webkit-filter: blur(5px); } 100% { -webkit-filter: blur(0px); } } /* 页脚透明 */ #footer{ background: transparent!important; } /* 页脚黑色透明玻璃效果移除 */ #footer::before{ background: transparent!important; } /* 头图透明 */ #page-header{ background: transparent!important; } /* 头图遮罩层透明 */ #page-header::before{ background: transparent!important; } /*夜间模式伪类遮罩层透明*/ [data-theme=\"dark\"] #footer::before{ background: transparent!important; } [data-theme=\"dark\"] #page-header::before{ background: transparent!important; } /* 头像呼吸灯 */ [data-theme=\"light\"] .avatar-img { animation: huxi_light 4s ease-in-out infinite; } [data-theme=\"dark\"] .avatar-img { animation: huxi_dark 4s ease-in-out infinite; } @keyframes huxi_light { 0% { box-shadow: 0px 0px 1px 1px #e9f5fa; } 50% { box-shadow: 0px 0px 5px 5px #e9f5fa; } 100% { box-shadow: 0px 0px 1px 1px #e9f5fa; } } @keyframes huxi_dark { 0% { box-shadow: 0px 0px 1px 1px #39c5bb; } 50% { box-shadow: 0px 0px 5px 5px #39c5bb; } 100% { box-shadow: 0px 0px 1px 1px #39c5bb; } } /* 一级菜单居中 */ #nav .menus_items { position: absolute !important; width: fit-content !important; left: 50% !important; transform: translateX(-50%) !important; } /* 子菜单横向展示 */ #nav .menus_items .menus_item:hover .menus_item_child { display: flex !important; } /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */ .menus_items .menus_item:nth-child(2) .menus_item_child { left: -125px; } /* 侧边栏个人信息卡片动态渐变色 */ #aside-content > .card-widget.card-info { background: linear-gradient( -45deg, #e8d8b9, #eccec5, #a3e9eb, #bdbdf0, #eec1ea ); box-shadow: 0 0 5px rgb(66, 68, 68); position: relative; background-size: 400% 400%; -webkit-animation: Gradient 10s ease infinite; -moz-animation: Gradient 10s ease infinite; animation: Gradient 10s ease infinite !important; } @-webkit-keyframes Gradient { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } } @-moz-keyframes Gradient { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } } @keyframes Gradient { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } } /* 黑夜模式适配 */ [data-theme=\"dark\"] #aside-content > .card-widget.card-info { background: #191919ee; } /* 个人信息Follow me按钮 */ #aside-content > .card-widget.card-info > #card-info-btn { background-color: #3eb8be; border-radius: 8px; }"},{"title":"","date":"2023-08-25T08:02:11.881Z","updated":"2023-08-25T08:02:11.881Z","comments":true,"path":"css/music.css","permalink":"https://gv8volep.github.io/css/music.css","excerpt":"","text":"#page:has(#anMusic-page) { border: 0; box-shadow: none !important; padding: 0 !important; background: transparent !important; } #an_music_bg { display: none; filter: blur(63px); opacity: 0.6; position: fixed; z-index: -999; background-attachment: local; background-position: center center; background-size: cover; background-repeat: no-repeat; width: 200%; height: 200%; top: -50%; left: -50%; transform: rotate(0deg); } body:has(#anMusic-page) #an_music_bg { display: block; } body:has(#anMusic-page) { background: rgb(13, 13, 13); } #anMusic-page meting-js .aplayer { display: flex; flex-direction: row-reverse; background: rgba(0, 0, 0, 0); border: none; box-shadow: none; } body:has(#anMusic-page) #web_bg { display: none; } body:has(#anMusic-page) #footer, body:has(#anMusic-page) #nav-music { display: none; } #anMusic-page .aplayer-body { width: 40%; height: 75vh; } #anMusic-page ol > li:hover { background: #ffffff33; border-radius: 6px; } #anMusic-page .aplayer-pic { float: none; width: 180px; height: 180px; border-radius: 12px; margin: auto; left: 0; right: 0; } #anMusic-page .aplayer-info { margin: 0 20px 0 20px; border-bottom: none; } #anMusic-page .aplayer-info .aplayer-music { text-align: center; height: auto; margin: 15px; } #anMusic-page .aplayer-info .aplayer-music .aplayer-author, #anMusic-page .aplayer-info .aplayer-music .aplayer-title { font-size: 2rem; font-weight: 700; color: #fff; } #anMusic-page .aplayer-info .aplayer-lrc { height: 800%; margin-top: 80px; mask-image: linear-gradient(to bottom, #000, #000, #000, #000, #000, #000, #000, #000, #000, #000, #0000, #0000); } #anMusic-page .aplayer-info .aplayer-lrc p { font-size: 14px; color: #fff; } #anMusic-page .aplayer .aplayer-lrc:after, #anMusic-page .aplayer .aplayer-lrc:before { display: none; } /* 控制器 */ #anMusic-page .aplayer-info .aplayer-controller { position: fixed; max-width: 1500px; margin: auto; left: 0; right: 0; bottom: 50px; } #anMusic-page .aplayer-info .aplayer-controller .aplayer-bar-wrap { margin: 0 160px 0 150px; } #anMusic-page .aplayer-info .aplayer-controller .aplayer-played { background: var(--anzhiyu-white) !important; } #anMusic-page .aplayer-info .aplayer-controller .aplayer-thumb { -webkit-transform: none; transform: none; background: #fff !important; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-back, #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-forward, #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-play { display: inline; position: fixed; } #anMusic-page .aplayer-info .aplayer-time { position: absolute; width: 100%; bottom: 21px; height: 0; display: flex; justify-content: flex-end; } #anMusic-page .aplayer-info .aplayer-time .aplayer-time-inner { margin-right: 18px; margin-top: -8px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-back { position: absolute; left: 0; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-play { position: absolute; left: 40px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-forward { position: absolute; left: 80px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon { width: 2rem; height: 2rem; margin-left: 15px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-menu { display: none; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon path { fill: var(--anzhiyu-white); opacity: 0.8; } #anMusic-page .aplayer-list { width: 60%; max-height: none !important; height: 100%; } #anMusic-page ol { max-height: 75vh !important; padding-right: 25px; } #anMusic-page ol > li { border-top: 1px solid transparent; font-size: 14px; } #anMusic-page ol > li.aplayer-list-light { background: rgb(255 255 255 / 20%); border-radius: 6px; } #anMusic-page ol > li span { color: var(--anzhiyu-white); } #anMusic-page ol > li.aplayer-list-light .aplayer-list-cur { display: none; } #anMusic-page ol > li span.aplayer-list-author { opacity: 0.6; } /* 导航栏 */ .page:has(#anMusic-page) #nav { backdrop-filter: none !important; background: 0 0 !important; border-bottom: none !important; } .page:has(#anMusic-page) #page-header.not-top-img #nav a, .page:has(#anMusic-page) #page-header #nav .back-home-button { color: var(--anzhiyu-white); } body:has(#anMusic-page) .s-sticker div { color: var(--anzhiyu-white) !important; } body:has(#anMusic-page) .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-loop { margin-right: 15px; } [data-theme=\"dark\"] .page:has(#anMusic-page) #page-header:before { background-color: transparent; } /* **** 移动端样式 ***** */ @media screen and (max-width: 768px) { body:has(#anMusic-page) #rightside { display: none; } body:has(#anMusic-page) #content-inner, body:has(#anMusic-page) #page { z-index: auto; } /* 歌曲列表 */ #anMusic-page .aplayer-list { position: fixed; z-index: 1002; width: 100%; bottom: -76%; left: 0; background: var(--sidebar-bg); height: auto; border-radius: 15px 15px 0px 0px; padding: 15px 0px; } #anMusic-page .aplayer-list.aplayer-list-hide { bottom: 0% !important; } #anMusic-page ol { max-height: 60vh !important; padding-right: 0px; } #anMusic-page ol > li { display: flex; margin: 0 10px; } #anMusic-page ol > li span { color: var(--font-color); } #anMusic-page ol > li span.aplayer-list-title { width: 30%; } #anMusic-page ol > li.aplayer-list-light { background: #33a673; padding: 5px 20px; border-radius: 10px; } #anMusic-page ol > li.aplayer-list-light span { color: #fff; } #anMusic-page ol > li span.aplayer-list-title { max-width: 55%; width: auto; display: -webkit-box; -webkit-line-clamp: 1; overflow: hidden; -webkit-box-orient: vertical; } #anMusic-page ol > li span.aplayer-list-author { position: absolute; right: 10px; width: auto; max-width: 35%; display: -webkit-box; -webkit-line-clamp: 1; overflow: hidden; -webkit-box-orient: vertical; } #anMusic-page ol > li.aplayer-list-light span.aplayer-list-author { right: 15px; } /* 歌词信息 */ #anMusic-page .aplayer-body { width: 100%; position: fixed; margin: auto; left: 0; right: 0; top: 100px; } #anMusic-page .aplayer-info .aplayer-lrc { margin-top: 40px; height: auto; max-height: 200%; min-height: 100%; mask-image: linear-gradient(to bottom, #000, #000, #000, #000, #0000, #0000); } #anMusic-page .aplayer-info .aplayer-lrc p.aplayer-lrc-current { color: #33a673; } /* 控制按键和进度条 */ #anMusic-page .aplayer-info .aplayer-controller { width: 100%; bottom: 100px; } #anMusic-page .aplayer-info .aplayer-controller .aplayer-bar-wrap { margin: 0 30px; } #anMusic-page .aplayer-info .aplayer-time { bottom: -40px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-time-inner { position: absolute; width: 100%; margin-right: 0; margin-top: -33px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-time-inner .aplayer-dtime { position: absolute; right: 30px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-time-inner .aplayer-ptime { position: absolute; left: 35px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-back { margin: auto; right: 110px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-play { margin: auto; right: 0; left: 0; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-forward { margin: auto; left: 110px; right: 0; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-order { position: absolute; left: 22px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-loop { position: absolute; right: 25px; } #anMusic-page .aplayer-info .aplayer-time .aplayer-icon-menu { display: inline; position: absolute; right: 25px; top: -90px; } #anMusic-page .aplayer-volume-bar-wrap { bottom: 0px; right: 7px; } #anMusic-page .aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap { left: -66px; } }"},{"title":"","date":"2023-08-25T07:00:45.787Z","updated":"2023-08-25T07:00:45.787Z","comments":true,"path":"css/preloader_bg.css","permalink":"https://gv8volep.github.io/css/preloader_bg.css","excerpt":"","text":".loading-img { background: url(https://gv8volep.github.io/img/headpic.jpg) no-repeat center center; background-size: cover; }"},{"title":"","date":"2023-08-26T10:53:19.587Z","updated":"2023-08-26T10:53:19.587Z","comments":true,"path":"css/progress_bar.css","permalink":"https://gv8volep.github.io/css/progress_bar.css","excerpt":"","text":".pace { -webkit-pointer-events: none; pointer-events: none; -webkit-user-select: none; -moz-user-select: none; user-select: none; z-index: 2000; position: fixed; margin: auto; top: 10px; left: 0; right: 0; height: 8px; border-radius: 8px; width: 4rem; background: #eaecf2; border: 1px #e3e8f7; overflow: hidden; } .pace-inactive .pace-progress { opacity: 0; transition: 0.3s ease-in; } .pace .pace-progress { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -o-box-sizing: border-box; box-sizing: border-box; -webkit-transform: translate3d(0, 0, 0); -moz-transform: translate3d(0, 0, 0); -ms-transform: translate3d(0, 0, 0); -o-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); max-width: 200px; position: absolute; z-index: 2000; display: block; top: 0; right: 100%; height: 100%; width: 100%; background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab); animation: gradient 1.5s ease infinite; background-size: 200%; } .pace.pace-inactive { opacity: 0; transition: 0.3s; top: -8px; } @keyframes gradient { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } }"},{"title":"图库","date":"2023-07-28T02:07:39.000Z","updated":"2023-07-28T02:45:19.068Z","comments":true,"path":"gallery/index.html","permalink":"https://gv8volep.github.io/gallery/index.html","excerpt":"","text":"专辑/单曲封面 . 插画 精美的插画"},{"title":"友情链接","date":"2023-07-27T07:13:28.000Z","updated":"2023-08-27T01:32:40.576Z","comments":true,"path":"link/index.html","permalink":"https://gv8volep.github.io/link/index.html","excerpt":"","text":""},{"title":"","date":"2023-08-25T08:01:49.540Z","updated":"2023-08-25T08:01:49.540Z","comments":true,"path":"js/anzhiyu.js","permalink":"https://gv8volep.github.io/js/anzhiyu.js","excerpt":"","text":"var anzhiyu = { // 音乐节目切换背景 changeMusicBg: function (isChangeBg = true) { if (window.location.pathname != \"/music/\") { return; } const anMusicBg = document.getElementById(\"an_music_bg\"); if (isChangeBg) { // player listswitch 会进入此处 const musiccover = document.querySelector(\"#anMusic-page .aplayer-pic\"); anMusicBg.style.backgroundImage = musiccover.style.backgroundImage; } else { // 第一次进入，绑定事件，改背景 let timer = setInterval(() => { const musiccover = document.querySelector(\"#anMusic-page .aplayer-pic\"); // 确保player加载完成 console.info(anMusicBg); if (musiccover) { clearInterval(timer); anMusicBg.style.backgroundImage = musiccover.style.backgroundImage; // 绑定事件 anzhiyu.addEventListenerChangeMusicBg(); // 暂停nav的音乐 if ( document.querySelector(\"#nav-music meting-js\").aplayer && !document.querySelector(\"#nav-music meting-js\").aplayer.audio.paused ) { anzhiyu.musicToggle(); } } }, 100); } }, addEventListenerChangeMusicBg: function () { const anMusicPage = document.getElementById(\"anMusic-page\"); const aplayerIconMenu = anMusicPage.querySelector(\".aplayer-info .aplayer-time .aplayer-icon-menu\"); anMusicPage.querySelector(\"meting-js\").aplayer.on(\"loadeddata\", function () { anzhiyu.changeMusicBg(); console.info(\"player loadeddata\"); }); aplayerIconMenu.addEventListener(\"click\", function () { document.getElementById(\"menu-mask\").style.display = \"block\"; document.getElementById(\"menu-mask\").style.animation = \"0.5s ease 0s 1 normal none running to_show\"; }); document.getElementById(\"menu-mask\").addEventListener(\"click\", function () { if (window.location.pathname != \"/music/\") return; anMusicPage.querySelector(\".aplayer-list\").classList.remove(\"aplayer-list-hide\"); }); }, }; // 调用 anzhiyu.changeMusicBg(false);"},{"title":"","date":"2023-08-25T07:25:05.294Z","updated":"2023-08-25T07:25:05.294Z","comments":true,"path":"js/day.js","permalink":"https://gv8volep.github.io/js/day.js","excerpt":"","text":"var d = new Date(); m = d.getMonth() + 1; dd = d.getDate(); y = d.getFullYear(); // 公祭日 if (m == 9 && dd == 18) { document.getElementsByTagName(\"html\")[0].setAttribute(\"style\", \"filter: grayscale(60%);\"); if (sessionStorage.getItem(\"isPopupWindow\") != \"1\") { Swal.fire(\"今天是九一八事变\" + (y - 1931).toString() + \"周年纪念日\\n🪔勿忘国耻，振兴中华🪔\"); sessionStorage.setItem(\"isPopupWindow\", \"1\"); } } if (m == 7 && dd == 7) { document.getElementsByTagName(\"html\")[0].setAttribute(\"style\", \"filter: grayscale(60%);\"); if (sessionStorage.getItem(\"isPopupWindow\") != \"1\") { Swal.fire(\"今天是卢沟桥事变\" + (y - 1937).toString() + \"周年纪念日\\n🪔勿忘国耻，振兴中华🪔\"); sessionStorage.setItem(\"isPopupWindow\", \"1\"); } } if (m == 12 && dd == 13) { document.getElementsByTagName(\"html\")[0].setAttribute(\"style\", \"filter: grayscale(60%);\"); if (sessionStorage.getItem(\"isPopupWindow\") != \"1\") { Swal.fire(\"今天是南京大屠杀\" + (y - 1937).toString() + \"周年纪念日\\n🪔勿忘国耻，振兴中华🪔\"); sessionStorage.setItem(\"isPopupWindow\", \"1\"); } } if (m == 8 && dd == 14) { document.getElementsByTagName(\"html\")[0].setAttribute(\"style\", \"filter: grayscale(60%);\"); if (sessionStorage.getItem(\"isPopupWindow\") != \"1\") { Swal.fire(\"今天是世界慰安妇纪念日\\n🪔勿忘国耻，振兴中华🪔\"); sessionStorage.setItem(\"isPopupWindow\", \"1\"); } } // 节假日 if (m == 10 && dd = 18 && dd"},{"title":"音乐","date":"2023-08-27T01:27:59.528Z","updated":"2023-08-27T01:27:59.528Z","comments":false,"path":"music/index.html","permalink":"https://gv8volep.github.io/music/index.html","excerpt":"","text":""},{"title":"","date":"2023-08-25T07:25:45.678Z","updated":"2023-08-25T07:25:45.678Z","comments":true,"path":"js/lunar.js","permalink":"https://gv8volep.github.io/js/lunar.js","excerpt":"","text":"var lunarInfo=[19416,19168,42352,21717,53856,55632,91476,22176,39632,21970,19168,42422,42192,53840,119381,46400,54944,44450,38320,84343,18800,42160,46261,27216,27968,109396,11104,38256,21234,18800,25958,54432,59984,28309,23248,11104,100067,37600,116951,51536,54432,120998,46416,22176,107956,9680,37584,53938,43344,46423,27808,46416,86869,19872,42416,83315,21168,43432,59728,27296,44710,43856,19296,43748,42352,21088,62051,55632,23383,22176,38608,19925,19152,42192,54484,53840,54616,46400,46752,103846,38320,18864,43380,42160,45690,27216,27968,44870,43872,38256,19189,18800,25776,29859,59984,27480,23232,43872,38613,37600,51552,55636,54432,55888,30034,22176,43959,9680,37584,51893,43344,46240,47780,44368,21977,19360,42416,86390,21168,43312,31060,27296,44368,23378,19296,42726,42208,53856,60005,54576,23200,30371,38608,19195,19152,42192,118966,53840,54560,56645,46496,22224,21938,18864,42359,42160,43600,111189,27936,44448,84835,37744,18936,18800,25776,92326,59984,27424,108228,43744,41696,53987,51552,54615,54432,55888,23893,22176,42704,21972,21200,43448,43344,46240,46758,44368,21920,43940,42416,21168,45683,26928,29495,27296,44368,84821,19296,42352,21732,53600,59752,54560,55968,92838,22224,19168,43476,41680,53584,62034,54560],solarMonth=[31,28,31,30,31,30,31,31,30,31,30,31],Gan=[\"甲\",\"乙\",\"丙\",\"丁\",\"戊\",\"己\",\"庚\",\"辛\",\"壬\",\"癸\"],Zhi=[\"子\",\"丑\",\"寅\",\"卯\",\"辰\",\"巳\",\"午\",\"未\",\"申\",\"酉\",\"戌\",\"亥\"],Animals=[\"鼠\",\"牛\",\"虎\",\"兔\",\"龙\",\"蛇\",\"马\",\"羊\",\"猴\",\"鸡\",\"狗\",\"猪\"],solarTerm=[\"小寒\",\"大寒\",\"立春\",\"雨水\",\"惊蛰\",\"春分\",\"清明\",\"谷雨\",\"立夏\",\"小满\",\"芒种\",\"夏至\",\"小暑\",\"大暑\",\"立秋\",\"处暑\",\"白露\",\"秋分\",\"寒露\",\"霜降\",\"立冬\",\"小雪\",\"大雪\",\"冬至\"],sTermInfo=[\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf97c3598082c95f8c965cc920f\",\"97bd0b06bdb0722c965ce1cfcc920f\",\"b027097bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf97c359801ec95f8c965cc920f\",\"97bd0b06bdb0722c965ce1cfcc920f\",\"b027097bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf97c359801ec95f8c965cc920f\",\"97bd0b06bdb0722c965ce1cfcc920f\",\"b027097bd097c36b0b6fc9274c91aa\",\"9778397bd19801ec9210c965cc920e\",\"97b6b97bd19801ec95f8c965cc920f\",\"97bd09801d98082c95f8e1cfcc920f\",\"97bd097bd097c36b0b6fc9210c8dc2\",\"9778397bd197c36c9210c9274c91aa\",\"97b6b97bd19801ec95f8c965cc920e\",\"97bd09801d98082c95f8e1cfcc920f\",\"97bd097bd097c36b0b6fc9210c8dc2\",\"9778397bd097c36c9210c9274c91aa\",\"97b6b97bd19801ec95f8c965cc920e\",\"97bcf97c3598082c95f8e1cfcc920f\",\"97bd097bd097c36b0b6fc9210c8dc2\",\"9778397bd097c36c9210c9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf97c3598082c95f8c965cc920f\",\"97bd097bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf97c3598082c95f8c965cc920f\",\"97bd097bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf97c359801ec95f8c965cc920f\",\"97bd097bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf97c359801ec95f8c965cc920f\",\"97bd097bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf97c359801ec95f8c965cc920f\",\"97bd097bd07f595b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9210c8dc2\",\"9778397bd19801ec9210c9274c920e\",\"97b6b97bd19801ec95f8c965cc920f\",\"97bd07f5307f595b0b0bc920fb0722\",\"7f0e397bd097c36b0b6fc9210c8dc2\",\"9778397bd097c36c9210c9274c920e\",\"97b6b97bd19801ec95f8c965cc920f\",\"97bd07f5307f595b0b0bc920fb0722\",\"7f0e397bd097c36b0b6fc9210c8dc2\",\"9778397bd097c36c9210c9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bd07f1487f595b0b0bc920fb0722\",\"7f0e397bd097c36b0b6fc9210c8dc2\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf7f1487f595b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf7f1487f595b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf7f1487f531b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c965cc920e\",\"97bcf7f1487f531b0b0bb0b6fb0722\",\"7f0e397bd07f595b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b97bd19801ec9210c9274c920e\",\"97bcf7f0e47f531b0b0bb0b6fb0722\",\"7f0e397bd07f595b0b0bc920fb0722\",\"9778397bd097c36b0b6fc9210c91aa\",\"97b6b97bd197c36c9210c9274c920e\",\"97bcf7f0e47f531b0b0bb0b6fb0722\",\"7f0e397bd07f595b0b0bc920fb0722\",\"9778397bd097c36b0b6fc9210c8dc2\",\"9778397bd097c36c9210c9274c920e\",\"97b6b7f0e47f531b0723b0b6fb0722\",\"7f0e37f5307f595b0b0bc920fb0722\",\"7f0e397bd097c36b0b6fc9210c8dc2\",\"9778397bd097c36b0b70c9274c91aa\",\"97b6b7f0e47f531b0723b0b6fb0721\",\"7f0e37f1487f595b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc9210c8dc2\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f595b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e397bd07f595b0b0bc920fb0722\",\"9778397bd097c36b0b6fc9274c91aa\",\"97b6b7f0e47f531b0723b0787b0721\",\"7f0e27f0e47f531b0b0bb0b6fb0722\",\"7f0e397bd07f595b0b0bc920fb0722\",\"9778397bd097c36b0b6fc9210c91aa\",\"97b6b7f0e47f149b0723b0787b0721\",\"7f0e27f0e47f531b0723b0b6fb0722\",\"7f0e397bd07f595b0b0bc920fb0722\",\"9778397bd097c36b0b6fc9210c8dc2\",\"977837f0e37f149b0723b0787b0721\",\"7f07e7f0e47f531b0723b0b6fb0722\",\"7f0e37f5307f595b0b0bc920fb0722\",\"7f0e397bd097c35b0b6fc9210c8dc2\",\"977837f0e37f14998082b0787b0721\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e37f1487f595b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc9210c8dc2\",\"977837f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc920fb0722\",\"977837f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e397bd097c35b0b6fc920fb0722\",\"977837f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e397bd07f595b0b0bc920fb0722\",\"977837f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e397bd07f595b0b0bc920fb0722\",\"977837f0e37f14998082b0787b06bd\",\"7f07e7f0e47f149b0723b0787b0721\",\"7f0e27f0e47f531b0b0bb0b6fb0722\",\"7f0e397bd07f595b0b0bc920fb0722\",\"977837f0e37f14998082b0723b06bd\",\"7f07e7f0e37f149b0723b0787b0721\",\"7f0e27f0e47f531b0723b0b6fb0722\",\"7f0e397bd07f595b0b0bc920fb0722\",\"977837f0e37f14898082b0723b02d5\",\"7ec967f0e37f14998082b0787b0721\",\"7f07e7f0e47f531b0723b0b6fb0722\",\"7f0e37f1487f595b0b0bb0b6fb0722\",\"7f0e37f0e37f14898082b0723b02d5\",\"7ec967f0e37f14998082b0787b0721\",\"7f07e7f0e47f531b0723b0b6fb0722\",\"7f0e37f1487f531b0b0bb0b6fb0722\",\"7f0e37f0e37f14898082b0723b02d5\",\"7ec967f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e37f1487f531b0b0bb0b6fb0722\",\"7f0e37f0e37f14898082b072297c35\",\"7ec967f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e37f0e37f14898082b072297c35\",\"7ec967f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e37f0e366aa89801eb072297c35\",\"7ec967f0e37f14998082b0787b06bd\",\"7f07e7f0e47f149b0723b0787b0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\",\"7f0e37f0e366aa89801eb072297c35\",\"7ec967f0e37f14998082b0723b06bd\",\"7f07e7f0e47f149b0723b0787b0721\",\"7f0e27f0e47f531b0723b0b6fb0722\",\"7f0e37f0e366aa89801eb072297c35\",\"7ec967f0e37f14998082b0723b06bd\",\"7f07e7f0e37f14998083b0787b0721\",\"7f0e27f0e47f531b0723b0b6fb0722\",\"7f0e37f0e366aa89801eb072297c35\",\"7ec967f0e37f14898082b0723b02d5\",\"7f07e7f0e37f14998082b0787b0721\",\"7f07e7f0e47f531b0723b0b6fb0722\",\"7f0e36665b66aa89801e9808297c35\",\"665f67f0e37f14898082b0723b02d5\",\"7ec967f0e37f14998082b0787b0721\",\"7f07e7f0e47f531b0723b0b6fb0722\",\"7f0e36665b66a449801e9808297c35\",\"665f67f0e37f14898082b0723b02d5\",\"7ec967f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e36665b66a449801e9808297c35\",\"665f67f0e37f14898082b072297c35\",\"7ec967f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e26665b66a449801e9808297c35\",\"665f67f0e37f1489801eb072297c35\",\"7ec967f0e37f14998082b0787b06bd\",\"7f07e7f0e47f531b0723b0b6fb0721\",\"7f0e27f1487f531b0b0bb0b6fb0722\"],nStr1=[\"日\",\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\"],nStr2=[\"初\",\"十\",\"廿\",\"卅\"],nStr3=[\"正\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\",\"冬\",\"腊\"];function lYearDays(b){var f,c=348;for(f=32768;f>8;f>>=1)c+=lunarInfo[b-1900]&f?1:0;return c+leapDays(b)}function leapMonth(b){return 15&lunarInfo[b-1900]}function leapDays(b){return leapMonth(b)?65536&lunarInfo[b-1900]?30:29:0}function monthDays(b,f){return f>12||f>f?30:29}function solarDays(b,f){if(f>12||f"},{"title":"tags","date":"2023-07-28T05:03:13.000Z","updated":"2023-08-24T02:01:04.191Z","comments":true,"path":"tags/index.html","permalink":"https://gv8volep.github.io/tags/index.html","excerpt":"","text":""},{"title":"收藏","date":"2023-08-29T04:18:21.034Z","updated":"2023-08-29T04:18:21.034Z","comments":false,"path":"web/index.html","permalink":"https://gv8volep.github.io/web/index.html","excerpt":"","text":"视频 Bilibili 哔哩哔哩 (゜-゜)つロ 干杯~-bilibili Youtube 全球视频网站 做工 Hexo 快速、简单且强大的网站框架 Github 开源交流网站 Convertio 文件转换器 摸鱼 扫雷 扫雷"},{"title":"专辑/单曲封面","date":"2023-07-28T02:07:39.000Z","updated":"2023-07-28T02:39:41.621Z","comments":true,"path":"gallery/cd/index.html","permalink":"https://gv8volep.github.io/gallery/cd/index.html","excerpt":"","text":"[{\"url\":\"https://p3.music.126.net/Ev6ifZrRefdFF0kZIpq5Lw==/109951166266518901.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/nRuQt_bbbiQ70CxwXUHXOQ==/109951163597044887.jpg\",\"alt\":\"\"},{\"url\":\"https://p4.music.126.net/jWFFWk-XoYFTVh09nWjBGg==/109951165005758203.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/bw7Sxt-W5lq0Jeq9B9eaXA==/109951163846794308.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/tzykI3ZXAL8b0hyVk0uq8Q==/42880953495280.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/vlAsuR_7xkGYlthG92Z81A==/109951164144451252.jpg\",\"alt\":\"\"},{\"url\":\"https://p4.music.126.net/W1kczDCB4-r-uNAznD1ljg==/108851651165850.jpg\",\"alt\":\"\"},{\"url\":\"https://p4.music.126.net/aEehIWg8Qk5DXLGf0XZHqw==/109951166554891221.jpg\",\"alt\":\"\"},{\"url\":\"https://p3.music.126.net/z253qn2_rIiK0NvaD5_btA==/109951162817129061.jpg\",\"alt\":\"\"}] 加载更多"},{"title":"插画","date":"2023-07-28T02:07:39.000Z","updated":"2023-12-24T00:26:41.699Z","comments":true,"path":"gallery/img/index.html","permalink":"https://gv8volep.github.io/gallery/img/index.html","excerpt":"","text":"[{\"url\":\"https://cdn.jsdelivr.net/gh/gv8volep/7QIHS@main/img/pic1.jpg\",\"alt\":\"\"},{\"url\":\"https://cdn.jsdelivr.net/gh/gv8volep/7QIHS@main/img/box1.png\",\"alt\":\"\"},{\"url\":\"https://cdn.jsdelivr.net/gh/gv8volep/7QIHS@main/img/pic0.png\",\"alt\":\"\"},{\"url\":\"https://cdn.jsdelivr.net/gh/gv8volep/7QIHS@main/img/pic2.jpg\",\"alt\":\"\"}] 加载更多"}],"posts":[{"title":"JavaScript笔记","slug":"JavaScript笔记","date":"2023-12-24T02:36:09.800Z","updated":"2023-12-24T06:06:56.792Z","comments":true,"path":"2023/12/24/JavaScript笔记/","link":"","permalink":"https://gv8volep.github.io/2023/12/24/JavaScript%E7%AC%94%E8%AE%B0/","excerpt":"","text":"感觉语法跟C++差不多 使用在 html 中使用 &lt;script&gt; 以使用 js。同 CSS 一样， js 在 html 中的使用同样有内部、外部和内联三种，一般优先使用前两种方式。 考虑到浏览器的编译顺序，一般在 &lt;body&gt; 标签的最后使用 &lt;script&gt; 标签。 1234&lt;body&gt; &lt;p&gt;你好&lt;/p&gt; &lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;&lt;/body&gt; 简单尝试使用 document.getElementById().innerHTML 改变元素内容。 例如，前文写一个空段落，id 为“e_id”12345678910&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title/&gt; &lt;meta charset=&quot;UTF-8&quot;/&gt; &lt;/head&gt; &lt;body&gt; &lt;p id=&quot;e_id&quot;&gt;&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 效果： 在段落标签下面，接着加一句:1&lt;script&gt;document.getElementById(&quot;e_id&quot;).innerHTML=&quot;你好&quot;;&lt;/script&gt; 效果： document.getElementById(\"e_id2\").innerHTML=\"你好\"; 函数使用 function 来定义一个函数。 例如：123function MyFunction()&#123; document.getElementById(&quot;e_id&quot;).innerHTML=&quot;你好&quot;;&#125; 基本语句输出 使用 window.alert() 写入警告框 使用 document.write() 写入 HTML 输出 使用 innerHTML 写入 HTML 元素 使用 console.log() 写入浏览器控制台 innerHTML如需访问 HTML 元素，JavaScript 可使用 document.getElementById(id) 方法。上文已写。 document.write()若出于测试目的，那么 document.write() 十分方便。 123&lt;script&gt; document.write(5-2)&lt;/script&gt; 效果：3 注意 在 HTML 文档完全加载后使用 document.write() 将删除所有已有的 HTML ## 关键词 | 关键词 | 描述 | | ---- | ---- | | break | 终止 switch 或循环 | | continue | 跳出循环并在顶端开始。 | | debugger | 停止执行 JavaScript，并调用调试函数（如果可用）。| | do ... while | 执行语句块，并在条件为真时重复代码块。 | | for | 标记需被执行的语句块，只要条件为真。 | | function | 声明函数。 | | if ... else | 标记需被执行的语句块，根据某个条件。 | | return | 退出函数。 | | switch | 标记需被执行的语句块，根据不同的情况。 | | try ... catch | 对语句块实现错误处理。 | | var | 声明变量。 | # 变量 JavaScript 中变量分为 var 和 let 两种，常量声明用 const ## var 可参考其他编程的用法。 - 声明两次变量，并不会丢掉它的值 如 12var carName = &quot;porsche&quot;;var carName; let与 var 的区别var 用于声明没有作用域的变量，而 let 用于声明有作用域的变量。 例如：12345&#123; var a = 123; # 此处可以使用变量 a&#125;# 此处也可以使用变量 a 12345&#123; let a = 123; # 此处可以使用变量a&#125;# 此处不能使用变量a 更新变量1234567var a = 1;# 此处变量a值为1&#123; var a = 2; # 此处变量a值为2&#125;# 此处变量a值为2 1234567var a = 1;# 此处变量a值为1&#123; let a = 2; # 此处变量a值为2&#125;# 此处变量a值为1 作用域如果在函数内声明变量，则 var 或 let 声明变量的作用域都是这个函数；如果在函数外声明变量，则 var 或 let 声明变量的作用域都是全局。 重新声明let 不能在同一个作用域中重复声明变量，但是在不同的作用域中可以。var 可以在同一个作用域中重复声明变量。 提升let 在后文声明的变量不能在前文使用，var 却可以。 const作用域与 let 相似，仅在自己的块作用域内使用，之外仍为 var 定义该变量的值。用于定义常量，不可重新赋值。必须在声明时赋值。 常量对象可更改，例如：12345const car = &#123;type = &quot;kia&quot;, model = &quot;idk&quot;, owner = &quot;David&quot;&#125;;car.owner = &quot;Tom&quot; # 可以更改属性car.color = &quot;white&quot; # 可以添加属性 类似 Python 的数组与字典。我们可以用 const = [] 声明数组，const = {key:val} 声明常量字典。","categories":[{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://gv8volep.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://gv8volep.github.io/tags/JavaScript/"}]},{"title":"CSS词典","slug":"CSS词典","date":"2023-12-24T02:35:51.805Z","updated":"2023-12-24T06:21:03.238Z","comments":true,"path":"2023/12/24/CSS词典/","link":"","permalink":"https://gv8volep.github.io/2023/12/24/CSS%E8%AF%8D%E5%85%B8/","excerpt":"","text":"语法 每行结束用分号 “.”用于更改class样式 “#”用于更改id样式 还可以直接更改标签样式 布局相关box-sizingbox-sizing 最主要的用法是规定容器元素的最终尺寸计算方式。 值：content-box 默认值border-box 常用inherit 从父继承 如果你创造了一个 &lt;\\div&gt; 没有设置 box-sizing 属性为 border-box(不设置的话默认值为 content-box.)，同时你设置 width:100px; border:10px solid red; padding:10px; 那么最终 div 容器的实际宽度为：100px(width)+210px(padding)+2*10px(border)=140px即100px的宽+20px的内边距和20px的边框，得到的宽度实际上比自己定义的更大。 当把它的值定义为 border-box 那么容器的宽度则为：100px-210px-210px = 60px宽度与我们定义的相同，但容器更小。 字体相关伪元素媒体选择器","categories":[{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://gv8volep.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"CSS","permalink":"https://gv8volep.github.io/tags/CSS/"}]},{"title":"小白的前端笔记HTML","slug":"小白的前端笔记","date":"2023-08-27T12:02:31.596Z","updated":"2023-12-24T00:26:34.225Z","comments":true,"path":"2023/08/27/小白的前端笔记/","link":"","permalink":"https://gv8volep.github.io/2023/08/27/%E5%B0%8F%E7%99%BD%E7%9A%84%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/","excerpt":"","text":"HTML简介HTML 是超文本标记语言 。它不是编程语言，而是标记语言。Html用标记标签来描述网页。 超文本是一种组织信息的方式，它通过超级链接方法将文本中的文字、图表与其他信息媒体相关联。这些相互关联的信息媒体可能在同一文本中，也可能是其他文件，或是地理位置相距遥远的某台计算机上的文件。这种组织信息方式将分布在不同位置的信息资源用随机方式进行连接，为人们查找，检索信息提供方便。 标记标签 HTML 标签由&lt;尖括号&gt;包围。 HTML 标签通常成对出现。 标签对中的第一个标签是开始标签，第二个标签是结束标签。 开始和结束标签也被称为开放标签和闭合标签。 HTML与网页.html文件即为一个网页。 HTML 文档描述网页。 HTML 文档包含 HTML 标签和纯文本。 HTML 文档也被称为网页。 Web 浏览器的作用是读取 HTML 文档，并以网页的形式显示出它们。浏览器不会显示 HTML 标签，而是使用标签来解释页面的内容。 我的第一个HTML程序1、启动一个可以编辑HTML文件的编辑器，可以是notepad等等。 2、在编辑器中输入以下代码: 1234567891011&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;这是标题&lt;/h1&gt; &lt;p&gt;这是段落&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 其中，我们使用来进行代码注释，在一些专业编辑器中，可以通过ctrl+/来快捷注释。 3、保存文件，在保存文件时，文件后缀既可以是.htm，也可以是.html。 4、运行文件，使用浏览器运行即可。 HTML基本标签-标题、段落、链接、图像标题HTML的标题标签为&lt;h1&gt;&lt;/h1&gt;，其中的数字代表标题等级，最大为1级，最小为6级。 实例： 123&lt;h1&gt;一级标题&lt;/h1&gt;&lt;h2&gt;二级标题&lt;/h2&gt;&lt;h3&gt;三级标题&lt;/h3&gt; 注意：HTML 的标题标签仅用于创建标题，切勿为加大字体而使用！ 补充一句，在 HTML 中分割线标签为&lt;hr&gt;，上方的分割线即为效果。 使用方法： 123&lt;p&gt;第一段话&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;第二段话&lt;/p&gt; 段落HTML的段落标签为&lt;p&gt;&lt;/p&gt;，前后标签中间直接写文字，不需要加引号。 实例： 1&lt;p&gt;这是一个段落&lt;/p&gt; 注：浏览器会自动地在段落的前后添加空行。 提示：不要用&lt;p&gt;&lt;/p&gt;代替&lt;br /&gt;来空行。如果您希望在不产生一个新段落的情况下进行换行（新行），也使用&lt;br /&gt;标签。 链接HTML的链接标签为&lt;a href=””&gt;&lt;/a&gt;，href=后的引号中填写链接地址，两个标签中间的文字是链接文本，即显示在页面上的文字。 实例： 1&lt;a href=&quot;https://www.baidu.com/&quot;&gt;百度官网&lt;/a&gt; 图片HTML的图片标签为&lt;img&gt;。图片名称、尺寸等通过属性来定义。 实例： 1&lt;img src=&quot;图片地址&quot; width=&quot;50&quot; height=&quot;50&quot; /&gt; HTML元素HTML元素简介HTML 文档是由 HTML 元素定义的。 HTML元素指的是从开始标签到结束标签之间所有的代码。 开始标签 元素内容 结束标签 &lt;p&gt; Hello &lt;/p&gt; &lt;a href = “www.baidu.com”&gt; 百度官网 &lt;/a&gt; 有些HTML元素可以具有空内容，大多数HTML元素可以具有属性。 HTML元素的嵌套大多数 HTML 元素可以嵌套（可以包含其他 HTML 元素）。 HTML 文档由嵌套的 HTML 元素构成。 实例： 1234567&lt;html&gt;&lt;body&gt;&lt;p&gt;你好&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 实例解释在上面的代码中，我们看到了html,body,p这三个元素。 &lt;p&gt;元素在之前写到过。 &lt;html&gt;元素&lt;html&gt;元素定义了整个 HTML 文档。 在上面的代码中&lt;html&gt;元素的内容是另一个 HTML 元素(&lt;body&gt;元素)。 &lt;body&gt;元素&lt;body&gt;元素定义了 HTML 文档的主体。 与之相对的&lt;head&gt;元素用于定义 HTML 文档的头部。 空的HTML元素没有内容的 HTML 元素被称为空元素。空元素是在开始标签中关闭的。 &lt;br&gt;就是没有关闭标签的空元素（&lt;br&gt;标签定义换行）。 在开始标签中添加斜杠，比如&lt;br /&gt;是关闭空元素的正确方法，HTML、XHTML 和 XML 都接受这种方式。 提示 建议在开始标签中加/来关闭空元素。 建议使用小写标签。 不要忘记结束标签。 HTML属性HTML 标签可以具有属性，属性为 HTML 标签提供更多信息。 属性一般在开始标签中规定。 属性出现的形式为 name = “val” 实例： 1&lt;h1 align = &quot;center&quot;&gt;你好&lt;/h1&gt; 其中，我们为一级标题标签添加了 align 属性，用于规定内容位置。 提示： 建议小写属性。 始终为属性值加引号。 更多标签及其属性详见此处。 HTML样式HTML的style属性style 属性用于改变 HTML 元素的样式。 它提供了一种改变所有 HTML 元素的样式的通用方法。 通过 HTML 样式，能够通过使用 style 属性直接将样式添加到 HTML 元素，或者间接地在独立的样式表中（CSS 文件）进行定义。 不建议使用的标签和属性对于以下这些标签和属性，请使用样式代替。 标签 描述 &lt;center&gt; 定义居中的内容 &lt;font&gt;和&lt;basefont&gt; 定义字体 &lt;s&gt;和&lt;strike&gt; 定义删除线文本 &lt;u&gt; 定义下划线文本 属性 描述 align 定义文本对齐方式 bgcolor 定义背景颜色 color 定义文本颜色 HTML样式实例背景颜色background-color 属性为元素定义了背景颜色： 12345678&lt;html&gt;&lt;body style=&quot;background-color:yellow&quot;&gt;&lt;h2 style=&quot;background-color:red&quot;&gt;This is a heading&lt;/h2&gt;&lt;p style=&quot;background-color:green&quot;&gt;This is a paragraph.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 改代码修改了body标签的样式，也就是整个页面的背景颜色。 字体、颜色、尺寸font-family、color 以及 font-size 属性分别定义元素中文本的字体系列、颜色和字体尺寸： 12345678&lt;html&gt;&lt;body&gt;&lt;h1 style=&quot;font-family:verdana&quot;&gt;A heading&lt;/h1&gt;&lt;p style=&quot;font-family:arial;color:red;font-size:20px;&quot;&gt;A paragraph.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 文本对齐text-align 属性规定了元素中文本的水平对齐方式： 12345678&lt;html&gt;&lt;body&gt;&lt;h1 style=&quot;text-align:center&quot;&gt;This is a heading&lt;/h1&gt;&lt;p&gt;The heading above is aligned to the center of this page.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; HTML格式化文本HTML 可定义很多供格式化输出的元素，比如粗体和斜体字。 文本格式化标签 标签 描述 &lt;b&gt; 定义加粗文本 &lt;big&gt; 定义大号文本 &lt;em&gt; 定义着重文本 &lt;i&gt; 定义斜体文本 &lt;small&gt; 定义小号文本 &lt;strong&gt; 定义加重语气 &lt;sub&gt; 定义靠下文本 &lt;sup&gt; 定义考上文本 &lt;ins&gt; 定义插入字 &lt;del&gt; 定义删除字 “计算机输出”标签 标签 描述 &lt;code&gt; 定义计算机代码 &lt;kbd&gt; 定义键盘码 &lt;samp&gt; 定义计算机代码样本 &lt;tt&gt; 定义打印机代码 &lt;val&gt; 定义变量 &lt;pre&gt; 定义预格式文本 引用、引用和术语定义 标签 描述 &lt;abbr&gt; 定义缩写 &lt;acronym&gt; 定义首字母缩写 &lt;address&gt; 定义地址 &lt;bdo&gt; 定义文字方向 &lt;blockquote&gt; 定义长的引用 &lt;q&gt; 定义短的引用 &lt;cite&gt; 定义引用、引证 &lt;dfn&gt; 定义一个定义项目 HTML引用浏览器通常自动为引文添加引号。 短的引用在 HTML 中，我们通过&lt;q&gt;标签来进行短的引用。 实例： 1&lt;p&gt;他说：&lt;q&gt;去你妈的花海。&lt;/q&gt;&lt;/p&gt; 长的引用在 HTML 中，我们用&lt;blockquote&gt;进行长的引用。 实例： 123456&lt;p&gt;以下内容引用自 WWF 的网站：&lt;/p&gt;&lt;blockquote cite=&quot;http://www.worldwildlife.org/who/index.html&quot;&gt;五十年来，WWF 一直致力于保护自然界的未来。世界领先的环保组织，WWF 工作于 100 个国家，并得到美国一百二十万会员及全球近五百万会员的支持。&lt;/blockquote&gt; 在上面的代码中，引用了 WWF 的话，由于文段较长，使用了&lt;blockquote&gt;标签，其中添加 cite 属性以声明引文出处，既可以是文献名称也可以是地址。cite 也可以单独作为元素使用。 HTML缩略词HTML &lt;abbr&gt;元素定义缩写或首字母缩略语。 实例： 1&lt;p&gt;&lt;abbr title = &quot;United States&quot;&gt;US&lt;/abbr&gt;的首任总统为华盛顿&lt;/p&gt; 在上面的代码中，浏览页面时只会显示 US，而 US 是 United States 的缩写，便使用了&lt;abbr&gt;元素。 HTML联系信息在 HMTL 中，我们用&lt;address&gt;来定义联系方式或地址。 此元素通常以斜体显示。大多数浏览器会在此元素前后添加折行。 实例： 1234567&lt;address&gt;Written by Donald Duck.&lt;br&gt; Visit us at:&lt;br&gt;Example.com&lt;br&gt;Box 564, Disneyland&lt;br&gt;USA&lt;/address&gt; HTML双向重写HTML&lt;bdo&gt;元素定义双流向覆盖（bi-directional override）。 &lt;bdo&gt;元素用于覆盖当前文本方向：1&lt;bdo dir=&quot;rtl&quot;&gt;这是一段话&lt;/bdo&gt; 如果浏览器支持&lt;bdo&gt;那么上述文字在浏览器中显示的是话段一是这。属性 dir 的值可选rtl(从右往左)或ltr(从左往右)。 HTML颜色HTML 颜色可以通过十六进制表示，也可以通过 RGB 颜色值来表示具体参见颜色代码表。 许多 HTML 颜色有自己的颜色名。可参见HTML 颜色名。 HTML CSSHTML 的所有样式都可以移出 HTML 文件，移入一个独立的样式表(CSS文件)。 使用样式当浏览器读到一个样式表，它就会按照这个样式表来对文档进行格式化。以下为方法。 外部样式表当样式需要应用到很多页面时，外部样式表无疑时最理想的选择。123&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;&lt;/head&gt;注意写在head里。 内部样式表当个别文件应用样式时，可以使用内部样式表。写法如下：12345678&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;body &#123;background-color: red&#125;p &#123;margin-left: 20px&#125;&lt;/style&gt;&lt;/head&gt; 内联样式当文件内部分标签需要应用格式时，可以使用内联样式。 123&lt;p style=&quot;color: red; margin-left: 20px&quot;&gt;This is a paragraph&lt;/p&gt; 该代码给”This is a paragraph”修改了颜色和左外边距。 块元素span以下仅个人理解，没有参考任何资料，随着理解逐渐深入可能还会更新。 用于组合元素，也就是数学中的∪、ps中的ctrl+G、ppt中的组合。也用于并排排列。俺也不知道这俩哪个对。 div效果见此博客首页的文章卡片。纵向块级排列。 表格和列表表格表格由&lt;table&gt;标签来定义。每个表格均有若干行（由&lt;tr&gt; 标签定义），每行被分割为若干单元格（由&lt;td&gt;标签定义）。 12345678910&lt;table border=&quot;1&quot;&gt;&lt;tr&gt; &lt;td&gt;row 1, cell 1&lt;/td&gt; &lt;td&gt;row 1, cell 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;row 2, cell 1&lt;/td&gt; &lt;td&gt;row 2, cell 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 显示如下， row 1, cell 1 row 1, cell 2 row 2, cell 1 row 2, cell 2 其中空单元格用一对td标签表示。 表格边框通过 tabel 标签中的 border 属性来添加。 表头表格的表头使用&lt;th&gt;标签进行定义。 1234567891011121314&lt;table border=&quot;1&quot;&gt;&lt;tr&gt; &lt;th&gt;Heading&lt;/th&gt; &lt;th&gt;Another Heading&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;row 1, cell 1&lt;/td&gt; &lt;td&gt;row 1, cell 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;row 2, cell 1&lt;/td&gt; &lt;td&gt;row 2, cell 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 加上代码后显示如下 Heading Another Heading row 1, cell 1 row 1, cell 2 row 2, cell 1 row 2, cell 2 列表有序列表有序列表是一列项目，列表项目使用数字进行标记。 有序列表始于&lt;ol&gt;标签。每个列表项始于&lt;li&gt;标签。 1234&lt;ol&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt;&lt;/ol&gt; 显示如下： Coffee Milk 无序列表1234&lt;ul&gt; &lt;li&gt;coffee&lt;/li&gt; &lt;li&gt;milk&lt;/li&gt;&lt;/ul&gt; coffee milk 定义列表自定义列表不仅仅是一列项目，而是项目及其注释的组合。 自定义列表以&lt;dl&gt;标签开始。每个自定义列表项以&lt;dt&gt;开始。每个自定义列表项的定义以&lt;dd&gt;开始。 &lt;dd&gt;包围的内容用于解释说明&lt;dt&gt;。 123456&lt;dl&gt; &lt;dt&gt;Coffee&lt;/dt&gt; &lt;dd&gt;Black hot drink&lt;/dd&gt; &lt;dt&gt;Milk&lt;/dt&gt; &lt;dd&gt;White cold drink&lt;/dd&gt;&lt;/dl&gt; 显示： Coffee Black hot drink Milk White cold drink 类和id类和id都是 HTML 属性，为了方便给某一个或某一种元素添加对应的样式。 123456&lt;p class=&quot;posts&quot; id=&quot;post_1&quot;&gt; woshi7q&lt;/p&gt;&lt;p class=&quot;posts&quot; id=&quot;post_2&quot;&gt; nishishei?&lt;/p&gt; 在 CSS 中添加样式。类以.开头，id以#开头。 123456.posts &#123; font-color = &quot;white&quot;;&#125;#post_2 &#123; font-weight = &quot;bold&quot;;&#125; 这样的话，两段文字都是白色，但是第二段要加粗。 内联框架iframe 用于在网页内显示网页。 1&lt;iframe src=&quot;https://gv8volep.github.io/&quot; width=400px height=250px frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;","categories":[{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://gv8volep.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"【萌新】用Python制作的单词背诵程序","slug":"[萌新]用Python制作的单词背诵程序","date":"2023-08-07T10:59:47.116Z","updated":"2023-08-24T02:09:14.901Z","comments":true,"path":"2023/08/07/[萌新]用Python制作的单词背诵程序/","link":"","permalink":"https://gv8volep.github.io/2023/08/07/[%E8%90%8C%E6%96%B0]%E7%94%A8Python%E5%88%B6%E4%BD%9C%E7%9A%84%E5%8D%95%E8%AF%8D%E8%83%8C%E8%AF%B5%E7%A8%8B%E5%BA%8F/","excerpt":"","text":"最近心血来潮制作了一个关于单词背诵的程序，本文将从构思到代码逐步解读思路。（纯萌新） 程序结构程序可以分为三个结构：主UI界面，背单词界面，读取词库、收藏夹等功能程序。 主UI界面本程序两个UI都使用Python的tkinter库。 主UI有以下互动选项： 开始 收藏夹 历史、进度、选择词库(饼) 背单词界面背单词界面实现了以下功能 已经记住（刷新） 展示中文 加入收藏夹 功能程序 读取词库 文件交互 代码解读读取词库首先，本程序所支持的词库格式为.xlsx文件，要与Excel文件进行交互，便用到了，Python的 openpyxl 库。 要先在cmd或powershell中进行下载。 1pip install openpyxl 按照格式整理词库 如图所示，即A列为外语单词，B列为汉语语义；且由于选择词库还在饼，词库文件名必须为词库.xlsx，工作表名必须为 Sheet1。 在网络中获取一个外语词库格式可能非常混乱，而通常词库单词多，人工排版极为麻烦，我在这里用到了office Excel的分列功能。 分列功能有分割符号和固定宽度两个方式，一般推荐分割符号，毕竟每个单词长短不同，所选的符号可以是原有的分号或者方括号、大括号、斜杠等原有的、具有代表性的符号。 Python文件读取、处理词库12345678910if __name__ ==&#x27;__main__&#x27;: import openpyxl workbook = openpyxl.load_workbook(&quot;词库.xlsx&quot;) #导入excel worksheet = workbook[&#x27;Sheet1&#x27;] #选择工作表 xl_A = [] #存储A列数据的列表 xl_B = [] #存储B列数据的列表 for a in worksheet.iter_cols(min_row=1, max_row=worksheet.max_row, min_col=1, max_col=1): #把A列数据存到列表中，与row相关为行，col为列 xl_A.extend([cell.value for cell in a]) for b in worksheet.iter_cols(min_row=1, max_row=worksheet.max_row, min_col=2, max_col=2): #把B列数据存到列表中 xl_B.extend([cell.value for cell in b]) 此段代码用openpyxl库，实现了确定文档路径、工作表，并遍历行列，将单词存储于xl_A列表中，将汉语意思存储于xl_B中。 本来在构思中打算用字典存储数据，但考虑到相同单词对应的汉语下标相同，所以舍弃这一想法。 使用Tkinter制作程序UI本程序采用最简单的pyUI框架（","categories":[{"name":"程序","slug":"程序","permalink":"https://gv8volep.github.io/categories/%E7%A8%8B%E5%BA%8F/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://gv8volep.github.io/tags/Python/"}]},{"title":"RE:从零开始的Python学习笔记","slug":"RE从零开始的Python学习笔记","date":"2023-07-28T07:40:26.622Z","updated":"2023-12-24T00:40:11.565Z","comments":true,"path":"2023/07/28/RE从零开始的Python学习笔记/","link":"","permalink":"https://gv8volep.github.io/2023/07/28/RE%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"这里是一个萌新的 Python 学习笔记，在这里，我将从头开始梳理 Python 语法结构与代码。 Python语法特点面向对象不同于C语言，Python编程具有强烈的 面向对象 特性，于class中体现其性质。 缩进Python是一门非常注重 缩进 的语言，任何语句必须严格按照逻辑缩进，否则出现错误提示。 代码规范学习任何计算机语言，一定要养成 注释 的好习惯，不单单为了他人的阅读性，更利于自己检查代码。 12345# 在python中，使用井号进行单行注释&#x27;&#x27;&#x27;使用三个连续的单引号或双引号进行多行注释&#x27;&#x27;&#x27; 环境相比于Microsoft的Visual Studio Code，更推荐Pycharm进行Python项目的开发。 初识Python: 简单的Python语句输入&amp;输出&amp;变量Python中，输入与输出的代码分别是input与print 12print(&quot;输出内容&quot;)a = input(&quot;对用户的提示&quot;) #将用户输入内容，存放于变量a中。 在上面代码的书写中，我们用到了变量a来存放输入内容。 在python中，变量的使用是不需要提前声明的，所以可以直接使用。 提示 命名变量时一定要使变量名称有鲜明特点，方便阅读；且Python支持中文变量名(不建议使用) 另外，要注意变量的名字不可与Python中的保留字重名。具体请见下图： ![Python的33个保留字](https://pic.imgdb.cn/item/64c3786d1ddac507cc33bd12.png) ## 数据类型 ### 数字型 #### 整数 整数依据进制不同，主要分为十进制、二进制、十六进制、八进制等。 我们最熟悉的莫过于十进制整数。Python中表示十进制的数，只需要输入其所有位数即可。 注意 不可以0开头表示十进制整数。 八进制整数每位由0~7组成，逢8进1。 Python中八进制必须以0o或0O开头。 二进制与十六进制同理，不过在表示十六进制数的时候，前面必须加上0x或0X。 Python中用\"int\"将数据转换为整数型，且符合“向下取整”原则。如下所示。 12&gt;&gt;&gt;int(3.99) 3 浮点数浮点数由整数部分与小数部分组成，主要用于表示过小的数字。 Python中用”float”将数据转换为浮点型。 12&gt;&gt;&gt;float(2) 2.0 字符串顾名思义，字符串是字符的整体。 在python中，可以使用’’、””、’’’’’’表示字符串。其中、’’’’’’可以分多行表示。 12345a=&#x27;你好世界&#x27;b=&quot;你好世界&quot;c=&#x27;&#x27;&#x27;你好，世界！&#x27;&#x27;&#x27;print(&quot;%s\\n%s\\n%s&quot; % (a,b,c)) 输出: 123你好世界你好世界你好，世界！ 我们使用str将数据转换为字符串。 12&gt;&gt;&gt;str(123456) &quot;123456&quot; 布尔型布尔型是表示真或假的数据类型。分别用True和False来表示真与假。 我们用int将布尔值转换为整数型。 1234&gt;&gt;&gt;int(True) 1&gt;&gt;&gt;int(False) 0 开摆了，鸽~ 以上写着玩。","categories":[{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"Python","slug":"Python","permalink":"https://gv8volep.github.io/tags/Python/"}]},{"title":"Hello World - Hexo搭建个人博客网站教程","slug":"Hello World - Hexo搭建个人博客网站教程","date":"2023-07-26T23:42:29.273Z","updated":"2023-12-24T00:38:50.972Z","comments":true,"path":"2023/07/27/Hello World - Hexo搭建个人博客网站教程/","link":"","permalink":"https://gv8volep.github.io/2023/07/27/Hello%20World%20-%20Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%95%99%E7%A8%8B/","excerpt":"","text":"欢迎来到7Q的博客！本站基于Hexo框架搭建，访问 https://hexo.io/ 搭建同款网站^^。以下简单写一下搭建过程。 安装Hexo下载Node.js点击这里 ，根据自己系统下载即可。 下载Git点我 即可下载，下载时无脑下一步。 顺便下一个能编辑.yml文件的编辑器(如notepad++,vscode) 下载Hexo进入Git Bash，依次输入: 12345npm install hexo-cli -ghexo init blogcd blognpm installhexo server 将网站部署至Github配置Git首先注册一个Github账号。 然后在Git bash中输入： 12git config --global user.name &quot;你的Github用户名&quot;git config --global user.email &quot;你的Github邮箱&quot; 生成&amp;查看SSH密钥输入以下内容：(过程中需要点击三次回车键) 1ssh-keygen -t rsa -C &quot;你的Github邮箱&quot; 1cat ~/.ssh/id_rsa.pub #查看密钥 将网站上传至Github上传SSH进入Github，点击右上角你的头像，找到 Settings 。 在左侧找到 SSH and GPG keys 。 如下图所示填写key。 最后在git bash窗口中输入： 1ssh -T git@github.com 若出现”successfully”等字样，代表创建成功。 创建一个库再进入Github首页，点击 New Repository 或者 new 。 按照上图创建一个库。 上传与部署在博客根目录的 _config.yml 文件中搜索 deploy 。 并输入： 1234deploy: type: git repo: git@github.com:你的用户名/你的用户名.github.io.git branch: master 最后在根目录git bash窗口中输入： 123hexo cleanhexo ghexo d 验收成果进入 你的用户名.github.io 若进入网站则成功！ 该过程可能需要几分钟，不久后刷新即可。 附录 - Hexo常用命令12345hexo s #启动网站hexo g #生成网页hexo d #部署网站hexo clean #清除缓存hexo new page #新建网页 更多内容请参考Hexo官网文档。","categories":[{"name":"教程","slug":"教程","permalink":"https://gv8volep.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://gv8volep.github.io/tags/%E6%95%99%E7%A8%8B/"},{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"Hexo","slug":"Hexo","permalink":"https://gv8volep.github.io/tags/Hexo/"}]}],"categories":[{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/categories/%E7%AC%94%E8%AE%B0/"},{"name":"程序","slug":"程序","permalink":"https://gv8volep.github.io/categories/%E7%A8%8B%E5%BA%8F/"},{"name":"教程","slug":"教程","permalink":"https://gv8volep.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://gv8volep.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://gv8volep.github.io/tags/JavaScript/"},{"name":"CSS","slug":"CSS","permalink":"https://gv8volep.github.io/tags/CSS/"},{"name":"Python","slug":"Python","permalink":"https://gv8volep.github.io/tags/Python/"},{"name":"笔记","slug":"笔记","permalink":"https://gv8volep.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"教程","slug":"教程","permalink":"https://gv8volep.github.io/tags/%E6%95%99%E7%A8%8B/"},{"name":"Hexo","slug":"Hexo","permalink":"https://gv8volep.github.io/tags/Hexo/"}]}